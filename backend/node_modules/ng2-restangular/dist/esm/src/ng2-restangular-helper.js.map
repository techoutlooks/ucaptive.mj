{"version":3,"file":"ng2-restangular-helper.js","sourceRoot":"","sources":["../../../src/ng2-restangular-helper.ts"],"names":[],"mappings":";AAAA,qBAAsE,eAAe,CAAC,CAAA;AAEtF;IAAA;IA6CA,CAAC;IA3CQ,sCAAoB,GAA3B,UAA4B,OAAO;QACjC,IAAI,kBAAkB,GAAG,iBAAiB,CAAC,wBAAwB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACpF,IAAI,cAAc,GAAG,iBAAiB,CAAC,oBAAoB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC7E,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QACjG,IAAI,eAAe,GAAG,OAAO,CAAC,eAAe,IAAI,KAAK,CAAC;QAEvD,IAAI,cAAc,GAAG,IAAI,qBAAc,CAAC;YACtC,MAAM,EAAE,oBAAa,CAAC,UAAU,CAAC;YACjC,OAAO,EAAE,cAAc;YACvB,MAAM,EAAE,kBAAkB;YAC1B,GAAG,EAAE,OAAO,CAAC,GAAG;YAChB,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,gCAAe;SAChB,CAAC,CAAC;QAEH,MAAM,CAAC,cAAc,CAAC;IACxB,CAAC;IAEM,0CAAwB,GAA/B,UAAgC,WAAW;QACzC,IAAI,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;QACxD,IAAI,MAAM,GAAoB,IAAI,sBAAe,EAAE,CAAC;QAEpD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,kBAAkB,CAAC,CAAC,CAAC;YACnC,IAAI,KAAK,GAAQ,kBAAkB,CAAC,GAAG,CAAC,CAAC;YACzC,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC9B,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC;YACD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC5B,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAEM,sCAAoB,GAA3B,UAA4B,OAAO;QACjC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC;YACxB,IAAI,KAAK,GAAQ,OAAO,CAAC,GAAG,CAAC,CAAC;YAC9B,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;gBACjC,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC;YACtB,CAAC;QACH,CAAC;QAED,MAAM,CAAC,IAAI,cAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;IACjD,CAAC;IACH,wBAAC;AAAD,CAAC,AA7CD,IA6CC;AA7CY,yBAAiB,oBA6C7B,CAAA","sourcesContent":["import {URLSearchParams, Headers, RequestOptions, RequestMethod} from '@angular/http';\n\nexport class RestangularHelper {\n  \n  static createRequestOptions(options) {\n    let requestQueryParams = RestangularHelper.createRequestQueryParams(options.params);\n    let requestHeaders = RestangularHelper.createRequestHeaders(options.headers);\n    let methodName = options.method.charAt(0).toUpperCase() + options.method.substr(1).toLowerCase();\n    let withCredentials = options.withCredentials || false;\n    \n    let requestOptions = new RequestOptions({\n      method: RequestMethod[methodName],\n      headers: requestHeaders,\n      search: requestQueryParams,\n      url: options.url,\n      body: options.data,\n      withCredentials\n    });\n    \n    return requestOptions;\n  }\n  \n  static createRequestQueryParams(queryParams) {\n    let requestQueryParams = Object.assign({}, queryParams);\n    let search: URLSearchParams = new URLSearchParams();\n    \n    for (let key in requestQueryParams) {\n      let value: any = requestQueryParams[key];\n      if (typeof value === 'object') {\n        value = JSON.stringify(value);\n      }\n      search.append(key, value);\n    }\n    \n    return search;\n  }\n  \n  static createRequestHeaders(headers) {\n    for (let key in headers) {\n      let value: any = headers[key];\n      if (typeof value === 'undefined') {\n        delete headers[key];\n      }\n    }\n    \n    return new Headers(Object.assign({}, headers));\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}